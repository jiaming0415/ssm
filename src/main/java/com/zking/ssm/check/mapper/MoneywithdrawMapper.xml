<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zking.ssm.check.mapper.MoneywithdrawMapper" >
  <resultMap id="BaseResultMap" type="com.zking.ssm.check.model.Moneywithdraw" >
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="state" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="remark" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="auditTime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="applyTime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="auditor_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="applier_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="amount" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="fee" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="bankName" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="accountName" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="accountNumber" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="forkName" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, state, remark, auditTime, applyTime, auditor_id, applier_id, amount, fee, bankName, 
    accountName, accountNumber, forkName
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from moneywithdraw
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="queryMoneywithdrawPager" resultType="map"
          parameterType="com.zking.ssm.check.model.Moneywithdraw">
    SELECT a.*,b.`username` AS name,c.username,b.realName FROM moneywithdraw AS a  LEFT JOIN userinfo AS b ON a.`applier_id` = b.`id`
    LEFT JOIN t_user AS c ON c.`id` = a.`auditor_id` WHERE 1=1
    <if test="null!=state">
      AND state=#{state}
    </if>
    order by applyTime desc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from moneywithdraw
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zking.ssm.check.model.Moneywithdraw" >
    insert into moneywithdraw (id, state, remark, 
      auditTime, applyTime, auditor_id, 
      applier_id, amount, fee, 
      bankName, accountName, accountNumber, 
      forkName)
    values (#{id,jdbcType=BIGINT}, #{state,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, 
      #{audittime,jdbcType=TIMESTAMP}, #{applytime,jdbcType=TIMESTAMP}, #{auditorId,jdbcType=BIGINT}, 
      #{applierId,jdbcType=BIGINT}, #{amount,jdbcType=DECIMAL}, #{fee,jdbcType=DECIMAL}, 
      #{bankname,jdbcType=VARCHAR}, #{accountname,jdbcType=VARCHAR}, #{accountnumber,jdbcType=VARCHAR}, 
      #{forkname,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zking.ssm.check.model.Moneywithdraw" >
    insert into moneywithdraw
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="audittime != null" >
        auditTime,
      </if>
      <if test="applytime != null" >
        applyTime,
      </if>
      <if test="auditorId != null" >
        auditor_id,
      </if>
      <if test="applierId != null" >
        applier_id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="fee != null" >
        fee,
      </if>
      <if test="bankname != null" >
        bankName,
      </if>
      <if test="accountname != null" >
        accountName,
      </if>
      <if test="accountnumber != null" >
        accountNumber,
      </if>
      <if test="forkname != null" >
        forkName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="audittime != null" >
        #{audittime,jdbcType=TIMESTAMP},
      </if>
      <if test="applytime != null" >
        #{applytime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditorId != null" >
        #{auditorId,jdbcType=BIGINT},
      </if>
      <if test="applierId != null" >
        #{applierId,jdbcType=BIGINT},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="fee != null" >
        #{fee,jdbcType=DECIMAL},
      </if>
      <if test="bankname != null" >
        #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="accountname != null" >
        #{accountname,jdbcType=VARCHAR},
      </if>
      <if test="accountnumber != null" >
        #{accountnumber,jdbcType=VARCHAR},
      </if>
      <if test="forkname != null" >
        #{forkname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zking.ssm.check.model.Moneywithdraw" >
    update moneywithdraw
    <set >
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="audittime != null" >
        auditTime = #{audittime,jdbcType=TIMESTAMP},
      </if>
      <if test="applytime != null" >
        applyTime = #{applytime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditorId != null" >
        auditor_id = #{auditorId,jdbcType=BIGINT},
      </if>
      <if test="applierId != null" >
        applier_id = #{applierId,jdbcType=BIGINT},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="fee != null" >
        fee = #{fee,jdbcType=DECIMAL},
      </if>
      <if test="bankname != null" >
        bankName = #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="accountname != null" >
        accountName = #{accountname,jdbcType=VARCHAR},
      </if>
      <if test="accountnumber != null" >
        accountNumber = #{accountnumber,jdbcType=VARCHAR},
      </if>
      <if test="forkname != null" >
        forkName = #{forkname,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zking.ssm.check.model.Moneywithdraw" >
    update moneywithdraw
    set state = #{state,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      auditTime = #{audittime,jdbcType=TIMESTAMP},
      applyTime = #{applytime,jdbcType=TIMESTAMP},
      auditor_id = #{auditorId,jdbcType=BIGINT},
      applier_id = #{applierId,jdbcType=BIGINT},
      amount = #{amount,jdbcType=DECIMAL},
      fee = #{fee,jdbcType=DECIMAL},
      bankName = #{bankname,jdbcType=VARCHAR},
      accountName = #{accountname,jdbcType=VARCHAR},
      accountNumber = #{accountnumber,jdbcType=VARCHAR},
      forkName = #{forkname,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateState" parameterType="com.zking.ssm.check.model.Moneywithdraw">
    update moneywithdraw
    <set>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="audittime != null" >
        auditTime = #{audittime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditorId != null" >
        auditor_id = #{auditorId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>